//    THE MEMBER FUNCTIONS OF THIS CLASS ALLOW TO MANAGE 
//    THE PERIODICITY OF THE THREADS GENERATED BY THE  
//    PTHREAD.H LIBRARY 

#include "thread_functions.h"

thread_functions::thread_functions(){}

void thread_functions::time_add_ms(timespec *t, int ms)
{
	 t->tv_sec += ms/1000;
	 t->tv_nsec += (ms%1000)*1000000;
	 if (t->tv_nsec > 1000000000) {
	     t->tv_nsec -= 1000000000;
	     t->tv_sec += 1;
     }
}

void thread_functions::time_copy(timespec *td, timespec ts)
{
     td->tv_sec = ts.tv_sec;
     td->tv_nsec = ts.tv_nsec;
}

void thread_functions::set_period(task_par *tp)
{
	 timespec t;
	 clock_gettime(CLOCK_MONOTONIC, &t);
	 this->time_copy(&(tp->at), t);
	 this->time_copy(&(tp->dl), t);
	 this->time_add_ms(&(tp->at), tp->period);
	 this->time_add_ms(&(tp->dl), tp->deadline);
}

void thread_functions::wait_for_period(task_par *tp)
{
     clock_nanosleep(CLOCK_MONOTONIC,
	 TIMER_ABSTIME, &(tp->at), NULL);
	 this->time_add_ms(&(tp->at), tp->period);
	 this->time_add_ms(&(tp->dl), tp->period);
}
